---
- environment:
    MAAS_HOST: "{{ host }}"
    MAAS_TOKEN_KEY: "{{ token_key }}"
    MAAS_TOKEN_SECRET: "{{ token_secret }}"
    MAAS_CUSTOMER_KEY: "{{ customer_key }}"
  vars:
    vm_host: "{% if test_existing_vm_host is defined %}{{ test_existing_vm_host }}{% else %}{{ test_lxd_host.hostname }}{% endif %}"


  block:
    - name: Delete machine
      maas.maas.instance: &delete
        fqdn: "instance-test.{{ test_domain }}"
        state: absent

    - name: Create virtual machine with two disks and a network interface.
      maas.maas.vm_host_machine:
        hostname: instance-test
        vm_host: "{{ vm_host }}"
        cores: 4
        memory: 8192
        network_interfaces:
          label_name: my_first
          subnet_cidr: "{{ test_subnet }}"
        storage_disks:
          - size_gigabytes: 8
      register: initial_machine
    - ansible.builtin.assert:
        that:
          - initial_machine is changed
          - initial_machine.record.hostname == "instance-test"
          - initial_machine.record.memory == 8192
          - initial_machine.record.cores == 4

    - name: Deploy machine
      maas.maas.instance: &deploy
        fqdn: "instance-test.{{ test_domain }}"
        state: deployed
        deploy_params:
          timeout: 360
      register: machine
    - ansible.builtin.assert:
        that:
          - machine is changed
          - machine.record.fqdn == "instance-test.{{ test_domain }}"
          - machine.record.hostname == "instance-test"
          - machine.record.memory == 8192
          - machine.record.cores == 4
          - machine.record.osystem == "ubuntu"
          - machine.record.distro_series == "focal"
          - machine.record.status == "Deployed"

    - name: Deploy machine - idempotence
      maas.maas.instance: *deploy
      register: machine
    - ansible.builtin.assert:
        that:
          - machine is not changed
          - machine.record.fqdn == "instance-test.{{ test_domain }}"
          - machine.record.hostname == "instance-test"
          - machine.record.memory == 8192
          - machine.record.cores == 4
          - machine.record.osystem == "ubuntu"
          - machine.record.distro_series == "focal"
          - machine.record.status == "Deployed"

    - name: Release machine
      maas.maas.instance: &release
        fqdn: "instance-test.{{ test_domain }}"
        state: ready
      register: machine
    - ansible.builtin.assert:
        that:
          - machine is changed
          - machine.record.fqdn == "instance-test.{{ test_domain }}"
          - machine.record.hostname == "instance-test"
          - machine.record.memory == 8192
          - machine.record.cores == 4
          - machine.record.status == "Ready"

    - name: Release machine - idempotence
      maas.maas.instance: *release
      register: machine
    - ansible.builtin.assert:
        that:
          - machine is not changed
          - machine.record.fqdn == "instance-test.{{ test_domain }}"
          - machine.record.hostname == "instance-test"
          - machine.record.memory == 8192
          - machine.record.cores == 4
          - machine.record.status == "Ready"

    - name: Deploy machine with another OS
      maas.maas.instance:
        fqdn: "instance-test.{{ test_domain }}"
        state: deployed
        deploy_params:
          distro_series: jammy
          timeout: 360
      register: machine
    - ansible.builtin.assert:
        that:
          - machine is changed
          - machine.record.fqdn == "instance-test.{{ test_domain }}"
          - machine.record.hostname == "instance-test"
          - machine.record.memory == 8192
          - machine.record.cores == 4
          - machine.record.osystem == "ubuntu"
          - machine.record.distro_series == "jammy"
          - machine.record.status == "Deployed"

    - name: Release machine
      maas.maas.instance: *release
      register: machine
    - ansible.builtin.assert:
        that:
          - machine is changed
          - machine.record.fqdn == "instance-test.{{ test_domain }}"
          - machine.record.hostname == "instance-test"
          - machine.record.memory == 8192
          - machine.record.cores == 4
          - machine.record.status == "Ready"

    - name: Delete machine
      maas.maas.instance: *delete
      register: machine
    - ansible.builtin.assert:
        that:
          - machine is changed

    - name: Delete machine - idempotence
      maas.maas.instance: *delete
      register: machine
    - ansible.builtin.assert:
        that:
          - machine is not changed

    # COMMENTED OUT DUE TO BUG IN MAAS (EPHEMERAL MACHINE ISN'T CREATED)
    # - name: Deploy new machine with default OS and allocation constraints
    #   maas.maas.instance:
    #     state: deployed
    #   register: machine
    # - ansible.builtin.assert:
    #     that:
    #       - machine is changed
    #       - machine.record.memory == 8192
    #       - machine.record.cores == 4
    #       - machine.record.osystem == "ubuntu"
    #       - machine.record.distro_series == "focal"
    #       - machine.record.status == "Deployed"

    # - name: Release machine (ephemeral machine is deleted)
    #   maas.maas.instance:
    #     fqdn: "{{ machine.record.fqdn }}"
    #     state: ready
    #   register: machine
    # - ansible.builtin.assert:
    #     that:
    #       - machine is changed

    # - name: Deploy new machine with custom OS and allocation constraints
    #   maas.maas.instance:
    #     state: deployed
    #     allocate_params:
    #       min_cpu_count: 1
    #       min_memory: 2000
    #       tags: virtual, pod-console-logging
    #       zone: default # TO USE DIFFERENT ZONE OR POOL IT NEEDS TO BE CREATED FIRST
    #       pool: default
    #     # TO BE ABLE TO TEST THIS, THIS NETWORK NEEDS TO BE CREATED
    #     # network_interfaces:
    #     #   name: my_network
    #     #   subnet_cidr: 10.10.10.0/24
    #     #   ip_address: 10.10.10.190
    #     deploy_params:
    #       distro_series: jammy
    #       # hwe_kernel: my_kernel
    #       # user_data: my_user_data
    #   register: machine
    # - ansible.builtin.assert:
    #     that:
    #       - machine is changed
    #       - machine.record.memory == 2048
    #       - machine.record.cores == 3
    #       - machine.record.osystem == "ubuntu"
    #       - machine.record.distro_series == "jammy"
    #       - machine.record.status == "Deployed"
    #       - machine.record.network_interfaces | length == 1
    #       - machine.record.tags == ["virtual", "pod-console-logging"]
    #       # - machine.record.network_interfaces[0].name == "my_network"
    #       # - machine.record.network_interfaces[0].subnet_cidr == "10.10.10.0/24"
    #       # - machine.record.network_interfaces[0].ip_address == "10.10.10.190"

    # - name: Release machine (ephemeral machine is deleted)
    #   maas.maas.instance:
    #     fqdn: "{{ machine.record.fqdn }}"
    #     state: ready
    #   register: machine
    # - ansible.builtin.assert:
    #     that:
    #       - machine is changed

    # COMMENTED OUT DUE TO BUG IN MAAS (EPHEMERAL MACHINE ISN'T CREATED)
    # - name: Deploy new machine with constraints that can't be meet
    #   maas.maas.instance:
    #     state: deployed
    #     # allocate_params:
    #     #   min_cpu_count: 20
    #     #   min_memory: 2000
    #   register: machine
    #   failed_when: machine is failed
    # - ansible.builtin.assert:
    #     that:
    #       - machine is not changed
    #       - "'No available machine matches constraints' in machine.msg"
